import * as React from 'react';
import { ColDef } from 'ag-grid-enterprise';
import { arrayValuesRender, commonValueRender, formatDateCell } from 'src/shared/util';
import { EVENT_TABLE_COLUMNS_KEY, EVENT_TABLE_COLUMNS_LABEL, EventTableData } from '../models';

export function useBuildEventTableColumns(): ColDef[] {
  return React.useMemo(
    () => [
      {
        field: EVENT_TABLE_COLUMNS_KEY.PICKUP_DATE,
        headerName: EVENT_TABLE_COLUMNS_LABEL.PICKUP_DATE,
        width: 200,
        flex: 1,
        sortable: true,
        suppressHeaderFilterButton: true,
        suppressAutoSize: true,
        mainMenuItems: ['sortAscending', 'sortDescending', 'pinSubMenu'],
        cellRenderer: ({ data }: { data: EventTableData }) => formatDateCell(data.pickupDate),
        pinned: 'left',
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.DELIVERY_DATE,
        headerName: EVENT_TABLE_COLUMNS_LABEL.DELIVERY_DATE,
        width: 200,
        flex: 1,
        sortable: true,
        mainMenuItems: ['sortAscending', 'sortDescending', 'pinSubMenu'],
        cellRenderer: ({ data }: { data: EventTableData }) => formatDateCell(data.deliveryDate),
        pinned: 'left',
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.CLIENT_NAME,
        headerName: EVENT_TABLE_COLUMNS_LABEL.CLIENT_NAME,
        minWidth: 200,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => commonValueRender(data.clientName),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.PICKUP_ADDRESS,
        headerName: EVENT_TABLE_COLUMNS_LABEL.PICKUP_ADDRESS,
        minWidth: 300,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => commonValueRender(data.pickupAddress),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.DELIVERY_ADDRESS,
        headerName: EVENT_TABLE_COLUMNS_LABEL.DELIVERY_ADDRESS,
        minWidth: 300,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => commonValueRender(data.deliveryAddress),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.DELIVERY_MAN,
        headerName: EVENT_TABLE_COLUMNS_LABEL.DELIVERY_MAN,
        minWidth: 200,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => arrayValuesRender(data.deliveryMan),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.TRUCK_ADDRESS,
        headerName: EVENT_TABLE_COLUMNS_LABEL.TRUCK_ADDRESS,
        minWidth: 300,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => commonValueRender(data.truckAddress),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: EVENT_TABLE_COLUMNS_KEY.MEETING_TIME,
        headerName: EVENT_TABLE_COLUMNS_LABEL.MEETING_TIME,
        minWidth: 150,
        flex: 1,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: ({ data }: { data: EventTableData }) => formatDateCell(data.meetingTime),
        headerClass: 'ag-header-cell-center',
      },
      {
        field: 'action',
        headerName: 'Action',
        width: 100,
        suppressHeaderMenuButton: true,
        suppressHeaderContextMenu: true,
        cellRenderer: () => 'Action',
        pinned: 'right',
        headerClass: 'ag-header-cell-center',
      },
    ],
    [],
  );
}
